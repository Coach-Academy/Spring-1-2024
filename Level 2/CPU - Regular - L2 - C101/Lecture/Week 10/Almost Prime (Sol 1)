#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int N = 1e7 + 1;
bool prime[N + 1];

void sieve() { // O(N log log N)
    fill(prime, prime + N, true);
    prime[0] = prime[1] = false;
    for (int i = 2; i * i <= N; ++i) {
        if (prime[i]) {
            for (int j = i * i; j <= N; j += i) {
                prime[j] = false;
            }
        }
    }
}

bool almost_prime(int n) {
    int prime_divisors = 0;
    for (int i = 2; i * i <= n; ++i) {
        if (n % i == 0) {
            if (prime[i])
                ++prime_divisors;
            if (i != n / i && prime[n / i])
                ++prime_divisors;
        }
    }
    return prime_divisors == 2;
}

int main() {
    sieve();
    int n, cnt = 0;
    cin >> n;
    for (int i = 1; i <= n; ++i) {
        if (almost_prime(i))
            ++cnt;
    }
    cout << cnt;
    return 0;
}
